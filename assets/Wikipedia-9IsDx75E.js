import{l as o}from"./index-Dp4thGzw.js";import"./index-Crs0KjiC.js";import m from"./APIService-5z9AJPHo.js";const l={id:"service1",name:"Wikipedia",description:"Displays articles near you in chosen language",hint:"Enter a language code",baseURL:""},g={maxClusterRadius:40,disableClusteringAtZoom:16},d=100,h=r=>o.divIcon({iconSize:[32,32],iconAnchor:[16,22],popupAnchor:[0,-32],className:"material-icons",html:r});class k extends m{constructor(){super(),this.setMetadata(l),this.setTags([{value:"en",label:"English",icon:"newspaper",isActive:!1},{value:"pl",label:"Polski",icon:"ðŸ‡µðŸ‡±",isActive:!0}])}async getLayers({center:i,radius:a}){a>1e4&&(a=1e4);let n=[];for(const e of this.getTags())if(e.isActive)try{const p=await(await fetch(`https://${e.value}.wikipedia.org/w/api.php?action=query&format=json&list=geosearch&formatversion=2&gscoord=${i.lat}%7C${i.lng}&gsradius=${a}&gslimit=${d}&origin=*`)).json(),s=o.markerClusterGroup(g);for(const t of p.query.geosearch){const u=o.marker([t.lat,t.lon],{icon:h(e.icon)}).bindPopup(`<a href="https://${e.value}.m.wikipedia.org/?curid=${t.pageid}" target="_blank"> ${t.title}</a>`);s.addLayer(u)}s.customLayerName=`${l.name}:${e.label}`,n.push(s)}catch(c){console.error(`Error fetching data for ${e.value}:`,c)}return n}}export{k as default};
